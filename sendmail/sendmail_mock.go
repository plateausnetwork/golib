// Code generated by MockGen. DO NOT EDIT.
// Source: sendmail.go

// Package sendmail is a generated GoMock package.
package sendmail

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSendmail is a mock of Sendmail interface.
type MockSendmail struct {
	ctrl     *gomock.Controller
	recorder *MockSendmailMockRecorder
}

// MockSendmailMockRecorder is the mock recorder for MockSendmail.
type MockSendmailMockRecorder struct {
	mock *MockSendmail
}

// NewMockSendmail creates a new mock instance.
func NewMockSendmail(ctrl *gomock.Controller) *MockSendmail {
	mock := &MockSendmail{ctrl: ctrl}
	mock.recorder = &MockSendmailMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendmail) EXPECT() *MockSendmailMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockSendmail) Send(send SendRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", send)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockSendmailMockRecorder) Send(send interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockSendmail)(nil).Send), send)
}
