// Code generated by MockGen. DO NOT EDIT.
// Source: web3mod.go

// Package web3mod is a generated GoMock package.
package web3mod

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWeb3 is a mock of Web3 interface.
type MockWeb3 struct {
	ctrl     *gomock.Controller
	recorder *MockWeb3MockRecorder
}

// MockWeb3MockRecorder is the mock recorder for MockWeb3.
type MockWeb3MockRecorder struct {
	mock *MockWeb3
}

// NewMockWeb3 creates a new mock instance.
func NewMockWeb3(ctrl *gomock.Controller) *MockWeb3 {
	mock := &MockWeb3{ctrl: ctrl}
	mock.recorder = &MockWeb3MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeb3) EXPECT() *MockWeb3MockRecorder {
	return m.recorder
}

// GetWalletNFTs mocks base method.
func (m *MockWeb3) GetWalletNFTs(in GetWalletNFTsIn) GetWalletNFTsOut {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletNFTs", in)
	ret0, _ := ret[0].(GetWalletNFTsOut)
	return ret0
}

// GetWalletNFTs indicates an expected call of GetWalletNFTs.
func (mr *MockWeb3MockRecorder) GetWalletNFTs(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletNFTs", reflect.TypeOf((*MockWeb3)(nil).GetWalletNFTs), in)
}
